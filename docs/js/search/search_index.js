var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/EventEmitter.html",[0,0.925,1,1.141]],["body/classes/EventEmitter.html",[0,0.445,1,0.888,2,0.679,3,0.549,4,1.287,5,0.445,6,0.853,7,1.381,8,2.62,9,0.22,10,0.888,11,1.74,12,1.74,13,1.74,14,1.74,15,1.74,16,1.381,17,1.74,18,1.74,19,1.74,20,2.352,21,1.809,22,1.385,23,1.12,24,0.083,25,1.117,26,0.888,27,1.761,28,1.381,29,1.084,30,1.592,31,1.592,32,0.445,33,2,34,1.117,35,1.836,36,1.592,37,1.345,38,1.117,39,1.381,40,1.74,41,1.381,42,0.581,43,1.381,44,1.117,45,0.445,46,0.679,47,1.381,48,1.117,49,0.284,50,0.549,51,0.853,52,1.117,53,1.117,54,1.117,55,1.117,56,1.117,57,1.117,58,1.117,59,1.381,60,1.117,61,1.117,62,2.878,63,1.117,64,1.809,65,1.809,66,0.853,67,1.809,68,0.853,69,1.117,70,1.117,71,1.117,72,1.117,73,1.117,74,1.117,75,1.117,76,1.117,77,1.117,78,1.117,79,1.117,80,0.02,81,0.033,82,0.02]],["title/interfaces/LibInformation.html",[49,0.592,83,0.925]],["body/interfaces/LibInformation.html",[3,1.039,4,1.039,5,0.842,9,0.416,10,1.438,24,0.081,29,0.679,32,0.842,35,1.039,37,1.443,42,1.319,45,1.166,49,0.745,50,1.649,80,0.038,81,0.053,82,0.038,83,1.166,84,1.285,85,1.039,86,1.438,87,1.778,88,2.311,89,2.201,90,2.562,91,2.562,92,2.562,93,1.285,94,1.614,95,1.614,96,1.614,97,1.039]],["title/interfaces/Message.html",[29,0.746,49,0.592]],["body/interfaces/Message.html",[3,1.071,4,1.071,5,0.868,9,0.429,10,1.468,24,0.081,27,1.071,29,0.959,32,0.868,35,1.888,36,1.325,37,1.673,42,1.178,45,1.19,49,0.761,50,1.675,80,0.04,81,0.054,82,0.04,83,0.868,84,1.325,85,1.071,86,1.071,87,1.325,88,1.816,89,2.229,90,1.664,91,1.664,92,1.664,93,1.325,94,1.664,95,1.664,96,1.664,97,1.071]],["title/classes/ProkeyLink.html",[0,0.925,98,1.412]],["body/classes/ProkeyLink.html",[0,0.425,1,1.63,2,0.648,3,0.524,4,1.084,5,0.425,7,1.329,9,0.21,10,0.855,11,1.329,12,1.329,13,1.329,14,1.329,15,2.145,16,1.329,17,2.76,18,1.329,19,1.685,20,2.695,22,1.549,23,1.252,24,0.082,26,0.524,27,1.252,28,0.814,29,0.902,30,1.549,31,1.549,32,0.425,33,0.814,35,1.252,36,1.058,37,0.879,39,0.814,40,0.814,41,1.685,42,0.709,43,0.814,45,0.425,46,1.549,47,1.685,49,0.272,50,0.524,51,0.814,80,0.019,81,0.032,82,0.019,97,0.855,98,1.058,99,0.814,100,2.207,101,3.18,102,2.549,103,2.549,104,1.741,105,1.741,106,1.946,107,2.809,108,1.066,109,1.066,110,1.066,111,1.066,112,1.066,113,1.685,114,1.066,115,1.066,116,1.066,117,1.058,118,0.648,119,0.648,120,1.066,121,1.058,122,1.066,123,1.066,124,1.066,125,1.066,126,1.066,127,1.066,128,1.685,129,1.066,130,2.207,131,1.066,132,1.066,133,1.066,134,1.066,135,1.741,136,1.066,137,1.066,138,1.066,139,1.066,140,1.066,141,1.066,142,1.066,143,1.066,144,1.066,145,1.741,146,1.066,147,1.066,148,1.066,149,0.814,150,1.066,151,1.066,152,1.066,153,1.066,154,1.066]],["title/coverage.html",[155,2.382]],["body/coverage.html",[0,1.225,1,1.117,5,0.906,6,1.736,24,0.079,29,0.73,42,0.73,49,0.783,68,1.736,80,0.041,81,0.056,82,0.041,83,0.906,85,1.511,98,1.382,99,1.736,117,1.382,118,1.382,119,1.382,121,1.382,155,1.736,156,2.274,157,2.274,158,2.274,159,2.274,160,2.274,161,3.076,162,3.076,163,2.274,164,2.274,165,1.736,166,3.485,167,3.901,168,3.901,169,1.736,170,1.736,171,3.076,172,1.736,173,1.736,174,1.736,175,1.736,176,2.274,177,2.274]],["title/dependencies.html",[178,1.965,179,2.123]],["body/dependencies.html",[24,0.079,80,0.058,81,0.069,82,0.058,179,2.432,180,3.185,181,3.185,182,3.185,183,3.185,184,3.185,185,3.185,186,3.185]],["title/miscellaneous/enumerations.html",[187,0.631,188,2.123]],["body/miscellaneous/enumerations.html",[9,0.595,23,1.816,24,0.076,26,1.816,37,1.59,80,0.055,81,0.067,82,0.055,85,1.486,88,1.838,93,1.838,97,1.486,187,0.971,188,2.309,189,2.309,190,3.025]],["title/miscellaneous/functions.html",[187,0.631,191,2.123]],["body/miscellaneous/functions.html",[9,0.468,24,0.076,30,1.925,31,1.925,32,1.262,42,1.017,45,1.262,46,1.925,66,2.419,80,0.043,81,0.058,82,0.043,83,0.947,86,1.168,87,1.444,119,2.166,121,2.166,165,1.814,169,1.814,172,1.814,173,2.419,174,2.419,187,0.763,189,1.814,191,1.814,192,2.377,193,2.377,194,2.377,195,2.377,196,2.377,197,2.377,198,2.377,199,3.564,200,2.377,201,2.377,202,2.377,203,2.377,204,2.377,205,2.377,206,2.377]],["title/index.html",[9,0.387,207,1.965,208,1.965]],["body/index.html",[24,0.073,80,0.063,81,0.073,82,0.063,86,1.693]],["title/modules.html",[209,2.382]],["body/modules.html",[24,0.073,80,0.063,81,0.073,82,0.063,209,2.63]],["title/overview.html",[210,2.382]],["body/overview.html",[2,2.027,24,0.071,80,0.061,81,0.071,82,0.061,84,2.027,210,2.547,211,3.92]],["title/miscellaneous/variables.html",[187,0.631,212,2.123]],["body/miscellaneous/variables.html",[9,0.484,22,1.97,23,1.592,24,0.081,26,1.208,27,1.592,59,1.878,80,0.045,81,0.059,82,0.045,89,1.495,106,1.878,113,1.878,117,1.97,118,2.203,128,1.878,149,1.878,170,1.878,175,1.878,187,0.79,212,1.878,213,2.46,214,2.46,215,3.241,216,2.46,217,2.46,218,2.46,219,2.46,220,3.241,221,2.46,222,2.46,223,2.46,224,2.46,225,2.46]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"classes/EventEmitter.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":184,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":181,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":168,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":162,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":167,"title":{},"body":{"coverage.html":{}}}],["120,top",{"_index":217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":211,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":186,"title":{},"body":{"dependencies.html":{}}}],["3/7",{"_index":164,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":161,"title":{},"body":{"coverage.html":{}}}],["36",{"_index":159,"title":{},"body":{"coverage.html":{}}}],["4/11",{"_index":160,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":163,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":76,"title":{},"body":{"classes/EventEmitter.html":{}}}],["600",{"_index":218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_port",{"_index":100,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["_source",{"_index":33,"title":{},"body":{"classes/EventEmitter.html":{},"classes/ProkeyLink.html":{}}}],["_window",{"_index":129,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["args",{"_index":72,"title":{},"body":{"classes/EventEmitter.html":{}}}],["async",{"_index":17,"title":{},"body":{"classes/EventEmitter.html":{},"classes/ProkeyLink.html":{}}}],["await",{"_index":130,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["back",{"_index":41,"title":{},"body":{"classes/EventEmitter.html":{},"classes/ProkeyLink.html":{}}}],["blue",{"_index":134,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["chrom",{"_index":142,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["chrome",{"_index":90,"title":{},"body":{"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["chrome.runtime.onconnectexternal.addlistener((port",{"_index":144,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["chrome.runtime.port",{"_index":105,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["class",{"_index":0,"title":{"classes/EventEmitter.html":{},"classes/ProkeyLink.html":{}},"body":{"classes/EventEmitter.html":{},"classes/ProkeyLink.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/EventEmitter.html":{},"classes/ProkeyLink.html":{},"overview.html":{}}}],["cmd",{"_index":151,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["color",{"_index":221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["color:${color",{"_index":224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["command",{"_index":37,"title":{},"body":{"classes/EventEmitter.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"miscellaneous/enumerations.html":{}}}],["connect",{"_index":101,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["connectionstream",{"_index":202,"title":{},"body":{"miscellaneous/functions.html":{}}}],["console",{"_index":225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('back",{"_index":139,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["console.log('initialize",{"_index":137,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["console.log('massage",{"_index":153,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["console.log('port",{"_index":147,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["console.log(`%c",{"_index":223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":128,"title":{},"body":{"classes/ProkeyLink.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"classes/EventEmitter.html":{},"classes/ProkeyLink.html":{}}}],["coverage",{"_index":155,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["data",{"_index":35,"title":{},"body":{"classes/EventEmitter.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["default",{"_index":22,"title":{},"body":{"classes/EventEmitter.html":{},"classes/ProkeyLink.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":20,"title":{},"body":{"classes/EventEmitter.html":{},"classes/ProkeyLink.html":{}}}],["dependencies",{"_index":179,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":32,"title":{},"body":{"classes/EventEmitter.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"miscellaneous/functions.html":{}}}],["device",{"_index":97,"title":{},"body":{"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"miscellaneous/enumerations.html":{}}}],["dispatched",{"_index":52,"title":{},"body":{"classes/EventEmitter.html":{}}}],["documentation",{"_index":156,"title":{},"body":{"coverage.html":{}}}],["enum",{"_index":94,"title":{},"body":{"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["enumerations",{"_index":188,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["event",{"_index":8,"title":{},"body":{"classes/EventEmitter.html":{}}}],["event.source",{"_index":58,"title":{},"body":{"classes/EventEmitter.html":{}}}],["eventemitter",{"_index":1,"title":{"classes/EventEmitter.html":{}},"body":{"classes/EventEmitter.html":{},"classes/ProkeyLink.html":{},"coverage.html":{}}}],["eventemitter:26",{"_index":108,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["eventemitter:34",{"_index":109,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["eventemitter:5",{"_index":111,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["eventemitter:50",{"_index":110,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["eventemitter:53",{"_index":116,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["eventlistener",{"_index":18,"title":{},"body":{"classes/EventEmitter.html":{},"classes/ProkeyLink.html":{}}}],["eventlistener(message",{"_index":43,"title":{},"body":{"classes/EventEmitter.html":{},"classes/ProkeyLink.html":{}}}],["events",{"_index":48,"title":{},"body":{"classes/EventEmitter.html":{}}}],["executing",{"_index":54,"title":{},"body":{"classes/EventEmitter.html":{}}}],["export",{"_index":50,"title":{},"body":{"classes/EventEmitter.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["extends",{"_index":7,"title":{},"body":{"classes/EventEmitter.html":{},"classes/ProkeyLink.html":{}}}],["extensionizer",{"_index":180,"title":{},"body":{"dependencies.html":{}}}],["extionsion",{"_index":143,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["false",{"_index":61,"title":{},"body":{"classes/EventEmitter.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/EventEmitter.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"coverage.html":{}}}],["firefox",{"_index":91,"title":{},"body":{"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["following",{"_index":55,"title":{},"body":{"classes/EventEmitter.html":{}}}],["function",{"_index":166,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":191,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get_device_id",{"_index":190,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["get_device_id='get",{"_index":96,"title":{},"body":{"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["getinformationlib",{"_index":121,"title":{},"body":{"classes/ProkeyLink.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getting",{"_index":207,"title":{"index.html":{}},"body":{}}],["given",{"_index":201,"title":{},"body":{"miscellaneous/functions.html":{}}}],["green",{"_index":222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":88,"title":{},"body":{"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"miscellaneous/enumerations.html":{}}}],["identifier",{"_index":157,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":47,"title":{},"body":{"classes/EventEmitter.html":{},"classes/ProkeyLink.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/EventEmitter.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/EventEmitter.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["information",{"_index":87,"title":{},"body":{"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"miscellaneous/functions.html":{}}}],["inherited",{"_index":107,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["init",{"_index":135,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["initial",{"_index":26,"title":{},"body":{"classes/EventEmitter.html":{},"classes/ProkeyLink.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["initial=\"initial",{"_index":95,"title":{},"body":{"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["initializeevent",{"_index":12,"title":{},"body":{"classes/EventEmitter.html":{},"classes/ProkeyLink.html":{}}}],["initialwindow",{"_index":117,"title":{},"body":{"classes/ProkeyLink.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":49,"title":{"interfaces/LibInformation.html":{},"interfaces/Message.html":{}},"body":{"classes/EventEmitter.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"coverage.html":{}}}],["interfaces",{"_index":84,"title":{},"body":{"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"overview.html":{}}}],["javascript",{"_index":56,"title":{},"body":{"classes/EventEmitter.html":{}}}],["lable",{"_index":220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib",{"_index":195,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libinformation",{"_index":83,"title":{"interfaces/LibInformation.html":{}},"body":{"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["library",{"_index":86,"title":{},"body":{"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["link",{"_index":149,"title":{},"body":{"classes/ProkeyLink.html":{},"miscellaneous/variables.html":{}}}],["list",{"_index":93,"title":{},"body":{"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"miscellaneous/enumerations.html":{}}}],["listen",{"_index":40,"title":{},"body":{"classes/EventEmitter.html":{},"classes/ProkeyLink.html":{}}}],["log",{"_index":118,"title":{},"body":{"classes/ProkeyLink.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["log('connect",{"_index":127,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["log('sleep",{"_index":133,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["matching",{"_index":81,"title":{},"body":{"classes/EventEmitter.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":29,"title":{"interfaces/Message.html":{}},"body":{"classes/EventEmitter.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"coverage.html":{}}}],["message?.data",{"_index":79,"title":{},"body":{"classes/EventEmitter.html":{}}}],["message['command",{"_index":64,"title":{},"body":{"classes/EventEmitter.html":{}}}],["message['data",{"_index":65,"title":{},"body":{"classes/EventEmitter.html":{}}}],["messages",{"_index":53,"title":{},"body":{"classes/EventEmitter.html":{}}}],["methods",{"_index":16,"title":{},"body":{"classes/EventEmitter.html":{},"classes/ProkeyLink.html":{}}}],["millisecond",{"_index":206,"title":{},"body":{"miscellaneous/functions.html":{}}}],["miscellaneous",{"_index":187,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":209,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["ms",{"_index":205,"title":{},"body":{"miscellaneous/functions.html":{}}}],["msg",{"_index":154,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["multiplex",{"_index":183,"title":{},"body":{"dependencies.html":{}}}],["multiplexing",{"_index":200,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mux",{"_index":203,"title":{},"body":{"miscellaneous/functions.html":{}}}],["name",{"_index":31,"title":{},"body":{"classes/EventEmitter.html":{},"classes/ProkeyLink.html":{},"miscellaneous/functions.html":{}}}],["new",{"_index":68,"title":{},"body":{"classes/EventEmitter.html":{},"coverage.html":{}}}],["null",{"_index":106,"title":{},"body":{"classes/ProkeyLink.html":{},"miscellaneous/variables.html":{}}}],["obj",{"_index":182,"title":{},"body":{"dependencies.html":{}}}],["onconnectexternal",{"_index":102,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["optional",{"_index":45,"title":{},"body":{"classes/EventEmitter.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"miscellaneous/functions.html":{}}}],["overview",{"_index":210,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":178,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":62,"title":{},"body":{"classes/EventEmitter.html":{}}}],["parameters",{"_index":30,"title":{},"body":{"classes/EventEmitter.html":{},"classes/ProkeyLink.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["port",{"_index":146,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["post",{"_index":28,"title":{},"body":{"classes/EventEmitter.html":{},"classes/ProkeyLink.html":{}}}],["postmessage",{"_index":13,"title":{},"body":{"classes/EventEmitter.html":{},"classes/ProkeyLink.html":{}}}],["private",{"_index":15,"title":{},"body":{"classes/EventEmitter.html":{},"classes/ProkeyLink.html":{}}}],["prokey",{"_index":113,"title":{},"body":{"classes/ProkeyLink.html":{},"miscellaneous/variables.html":{}}}],["prokeylink",{"_index":98,"title":{"classes/ProkeyLink.html":{}},"body":{"classes/ProkeyLink.html":{},"coverage.html":{}}}],["promise",{"_index":66,"title":{},"body":{"classes/EventEmitter.html":{},"miscellaneous/functions.html":{}}}],["promise((resolve",{"_index":69,"title":{},"body":{"classes/EventEmitter.html":{}}}],["properties",{"_index":10,"title":{},"body":{"classes/EventEmitter.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["public",{"_index":11,"title":{},"body":{"classes/EventEmitter.html":{},"classes/ProkeyLink.html":{}}}],["pump",{"_index":185,"title":{},"body":{"dependencies.html":{}}}],["receive",{"_index":194,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reject",{"_index":70,"title":{},"body":{"classes/EventEmitter.html":{}}}],["reject('timeout",{"_index":75,"title":{},"body":{"classes/EventEmitter.html":{}}}],["resolve(args",{"_index":73,"title":{},"body":{"classes/EventEmitter.html":{}}}],["responsemessage",{"_index":14,"title":{},"body":{"classes/EventEmitter.html":{},"classes/ProkeyLink.html":{}}}],["result",{"_index":80,"title":{},"body":{"classes/EventEmitter.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":82,"title":{},"body":{"classes/EventEmitter.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":59,"title":{},"body":{"classes/EventEmitter.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":46,"title":{},"body":{"classes/EventEmitter.html":{},"classes/ProkeyLink.html":{},"miscellaneous/functions.html":{}}}],["sent",{"_index":36,"title":{},"body":{"classes/EventEmitter.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["set",{"_index":141,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["sets",{"_index":197,"title":{},"body":{"miscellaneous/functions.html":{}}}],["settimeout(function",{"_index":74,"title":{},"body":{"classes/EventEmitter.html":{}}}],["setupmultiplex",{"_index":174,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupmultiplex(connectionstream",{"_index":196,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sleep",{"_index":119,"title":{},"body":{"classes/ProkeyLink.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sleep(5000",{"_index":131,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["sleep(ms",{"_index":204,"title":{},"body":{"miscellaneous/functions.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/EventEmitter.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["src/.../index.ts",{"_index":189,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/.../info.ts",{"_index":192,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../log.ts",{"_index":214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../stream",{"_index":193,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../window.ts",{"_index":213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/interface/index.ts",{"_index":85,"title":{},"body":{"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/prokeylink.ts",{"_index":99,"title":{},"body":{"classes/ProkeyLink.html":{},"coverage.html":{}}}],["src/prokeylink.ts:17",{"_index":112,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["src/prokeylink.ts:27",{"_index":115,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["src/prokeylink.ts:32",{"_index":114,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["src/prokeylink.ts:6",{"_index":104,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["src/utils/events.ts",{"_index":6,"title":{},"body":{"classes/EventEmitter.html":{},"coverage.html":{}}}],["src/utils/events.ts:26",{"_index":25,"title":{},"body":{"classes/EventEmitter.html":{}}}],["src/utils/events.ts:34",{"_index":34,"title":{},"body":{"classes/EventEmitter.html":{}}}],["src/utils/events.ts:5",{"_index":21,"title":{},"body":{"classes/EventEmitter.html":{}}}],["src/utils/events.ts:50",{"_index":38,"title":{},"body":{"classes/EventEmitter.html":{}}}],["src/utils/events.ts:53",{"_index":44,"title":{},"body":{"classes/EventEmitter.html":{}}}],["src/utils/index.ts",{"_index":165,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/info.ts",{"_index":169,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/log.ts",{"_index":170,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/stream",{"_index":172,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/window.ts",{"_index":175,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":208,"title":{"index.html":{}},"body":{}}],["statements",{"_index":158,"title":{},"body":{"coverage.html":{}}}],["stream",{"_index":199,"title":{},"body":{"miscellaneous/functions.html":{}}}],["string",{"_index":89,"title":{},"body":{"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":51,"title":{},"body":{"classes/EventEmitter.html":{},"classes/ProkeyLink.html":{}}}],["table",{"_index":177,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":176,"title":{},"body":{"coverage.html":{}}}],["this._port",{"_index":145,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["this._port.name",{"_index":148,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["this._port.onmessage.addlistener((msg",{"_index":152,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["this._port.postmessage",{"_index":150,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["this.emit(message.command",{"_index":78,"title":{},"body":{"classes/EventEmitter.html":{}}}],["this.eventlistener(event.data",{"_index":60,"title":{},"body":{"classes/EventEmitter.html":{}}}],["this.initializeevent(_window",{"_index":132,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["this.on(command",{"_index":71,"title":{},"body":{"classes/EventEmitter.html":{}}}],["this.postmessage",{"_index":125,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["this.postmessage(command.get_device_id",{"_index":138,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["this.postmessage(command.initial",{"_index":136,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["this.postmessage.bind(this",{"_index":126,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["this.source",{"_index":63,"title":{},"body":{"classes/EventEmitter.html":{}}}],["this.source?.postmessage",{"_index":67,"title":{},"body":{"classes/EventEmitter.html":{}}}],["this.windowsend",{"_index":123,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["this.windowsend.bind(this",{"_index":124,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["todo",{"_index":140,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["type",{"_index":42,"title":{},"body":{"classes/EventEmitter.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["up",{"_index":198,"title":{},"body":{"miscellaneous/functions.html":{}}}],["utils",{"_index":120,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["utils.ts",{"_index":173,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["utils/info",{"_index":122,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["value",{"_index":23,"title":{},"body":{"classes/EventEmitter.html":{},"classes/ProkeyLink.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":171,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":212,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":77,"title":{},"body":{"classes/EventEmitter.html":{}}}],["website",{"_index":92,"title":{},"body":{"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["width=800,height=400,left",{"_index":216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window",{"_index":27,"title":{},"body":{"classes/EventEmitter.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"miscellaneous/variables.html":{}}}],["window.addeventlistener",{"_index":57,"title":{},"body":{"classes/EventEmitter.html":{}}}],["window.open('http://localhost:3000",{"_index":219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["windowsend",{"_index":103,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["without",{"_index":39,"title":{},"body":{"classes/EventEmitter.html":{},"classes/ProkeyLink.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/EventEmitter.html":{"url":"classes/EventEmitter.html","title":"class - EventEmitter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventEmitter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/events.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Event\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                initializeEvent\n                            \n                            \n                                postMessage\n                            \n                            \n                                responseMessage\n                            \n                            \n                                    Private\n                                source\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                EventListener\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/utils/events.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        initializeEvent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/utils/events.ts:26\n                        \n                    \n\n            \n                \n                    Initial Window for post message\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    _source\n                                                    \n                                                            : Window\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/utils/events.ts:34\n                        \n                    \n\n            \n                \n                    Data to be sent to the other window.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                        \n                                    \n                                    \n                                            \n                                                    command\n                                            \n                                            \n                                                    data\n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        responseMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/utils/events.ts:50\n                        \n                    \n\n            \n                \n                    Data to be sent to the other window without listen back.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                        \n                                    \n                                    \n                                            \n                                                    command\n                                            \n                                            \n                                                    data\n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/events.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        EventListener\n                        \n                    \n                \n            \n            \n                \n                    \n                    EventListener(message: Message)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/events.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as Event from 'events';\nimport { Message } from '../interface';\n\nexport class EventEmitter extends Event {\n    private source: any;\n    constructor() {\n        super();\n        /**\n         * EventListener\n         * window can listen for dispatched messages by executing the following JavaScript\n         */\n        window.addEventListener(\n            'message',\n            (event: any) => {\n                if (event.source === window) return;\n                this.EventListener(event.data);\n            },\n            false,\n        );\n    }\n\n    /**\n     * Initial Window for post message\n     * @param _source : Window\n     */\n    public initializeEvent = (_source: any) => {\n        this.source = _source;\n    };\n    /**\n     * Data to be sent to the other window.\n     * @param command\n     * @param data\n     */\n    postMessage = (command: Message['command'], data?: Message['data']): Promise => {\n        this.source?.postMessage({ command, data }, '*');\n        return new Promise((resolve, reject) => {\n            this.on(command, (args) => {\n                resolve(args);\n            });\n            setTimeout(function () {\n                reject('Timeout');\n            }, 5000);\n        });\n    };\n    /**\n     * Data to be sent to the other window without listen back.\n     * @param command\n     * @param data\n     */\n    responseMessage = (command: Message['command'], data?: Message['data']): void => {\n        this.source?.postMessage({ command, data }, '*');\n    };\n    async EventListener(message: Message) {\n        this.emit(message.command, message?.data);\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LibInformation.html":{"url":"interfaces/LibInformation.html","title":"interface - LibInformation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LibInformation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/index.ts\n        \n\n\n            \n                Description\n            \n            \n                library type information\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"chrome\" | \"firefox\" | \"website\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"chrome\" | \"firefox\" | \"website\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Message {\n    command: Command | string;\n    data?: any;\n}\n\n/**\n *library type information\n */\nexport interface LibInformation {\n    type: 'chrome' | 'firefox' | 'website';\n    id?: string;\n}\n\n/**\n * List Command\n */\nexport enum Command{\n    INITIAL=\"initial\",\n    GET_DEVICE_ID='get-device-id',\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/index.ts\n        \n\n\n            \n                Description\n            \n            \n                Data to be sent to the other window.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            command\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        command\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        command:         Command | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Command | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Message {\n    command: Command | string;\n    data?: any;\n}\n\n/**\n *library type information\n */\nexport interface LibInformation {\n    type: 'chrome' | 'firefox' | 'website';\n    id?: string;\n}\n\n/**\n * List Command\n */\nexport enum Command{\n    INITIAL=\"initial\",\n    GET_DEVICE_ID='get-device-id',\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProkeyLink.html":{"url":"classes/ProkeyLink.html","title":"class - ProkeyLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProkeyLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ProkeyLink.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        EventEmitter\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _port\n                            \n                            \n                                    Public\n                                initializeEvent\n                            \n                            \n                                postMessage\n                            \n                            \n                                responseMessage\n                            \n                            \n                                    Private\n                                source\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                Connect\n                            \n                            \n                                    Async\n                                onConnectExternal\n                            \n                            \n                                    Async\n                                WindowSend\n                            \n                            \n                                    Async\n                                EventListener\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/ProkeyLink.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _port\n                        \n                    \n                \n            \n                \n                    \n                        Type :     chrome.runtime.Port | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/ProkeyLink.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        initializeEvent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         EventEmitter\n\n                            \n                        \n                    \n                        \n                                Defined in         EventEmitter:26\n\n                        \n                    \n\n            \n                \n                    Initial Window for post message\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    _source\n                                                    \n                                                            : Window\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         EventEmitter\n\n                            \n                        \n                    \n                        \n                                Defined in         EventEmitter:34\n\n                        \n                    \n\n            \n                \n                    Data to be sent to the other window.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                        \n                                    \n                                    \n                                            \n                                                    command\n                                            \n                                            \n                                                    data\n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        responseMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         EventEmitter\n\n                            \n                        \n                    \n                        \n                                Defined in         EventEmitter:50\n\n                        \n                    \n\n            \n                \n                    Data to be sent to the other window without listen back.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                        \n                                    \n                                    \n                                            \n                                                    command\n                                            \n                                            \n                                                    data\n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         EventEmitter\n\n                            \n                        \n                    \n                        \n                                Defined in         EventEmitter:5\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        Connect\n                        \n                    \n                \n            \n            \n                \n                    \n                    Connect()\n                \n            \n\n\n            \n                \n                    Defined in src/ProkeyLink.ts:17\n                \n            \n\n\n            \n                \n                    Connect Device Prokey\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onConnectExternal\n                        \n                    \n                \n            \n            \n                \n                    \n                    onConnectExternal()\n                \n            \n\n\n            \n                \n                    Defined in src/ProkeyLink.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        WindowSend\n                        \n                    \n                \n            \n            \n                \n                    \n                    WindowSend()\n                \n            \n\n\n            \n                \n                    Defined in src/ProkeyLink.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        EventListener\n                        \n                    \n                \n            \n            \n                \n                    \n                    EventListener(message: Message)\n                \n            \n\n\n            \n                \n                    Inherited from         EventEmitter\n\n                \n            \n            \n                \n                        Defined in         EventEmitter:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Command, Message } from './interface';\nimport { EventEmitter, initialWindow, log, sleep } from './utils';\nimport { getInformationLib } from './utils/info';\n\nexport class ProkeyLink extends EventEmitter {\n    private _port: chrome.runtime.Port | null = null;\n\n    constructor() {\n        super();\n        this.WindowSend = this.WindowSend.bind(this);\n        this.postMessage = this.postMessage.bind(this);\n    }\n\n    /**\n     * Connect Device Prokey\n     */\n    async Connect() {\n        log('Connect...');\n        const _window = initialWindow();\n        await sleep(5000);\n        this.initializeEvent(_window);\n        log('sleep...', 'blue');\n        const init = await this.postMessage(Command.INITIAL, getInformationLib());\n        console.log('initialize', init);\n    }\n\n    async WindowSend() {\n        const back = await this.postMessage(Command.GET_DEVICE_ID);\n        console.log('back', back);\n    }\n\n    async onConnectExternal() {\n        //TODO set for chrom extionsion\n        chrome.runtime.onConnectExternal.addListener((port) => {\n            this._port = port;\n            console.log('port', this._port);\n            if (this._port.name === 'prokey-link') {\n                this._port.postMessage({ cmd: 'Connect' });\n                this._port.onMessage.addListener((msg) => {\n                    console.log('massage', msg);\n                });\n            }\n        });\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/ProkeyLink.ts\n            \n            class\n            ProkeyLink\n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                src/interface/index.ts\n            \n            interface\n            LibInformation\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/interface/index.ts\n            \n            interface\n            Message\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/utils/events.ts\n            \n            class\n            EventEmitter\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/utils/index.ts\n            \n            function\n            sleep\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/info.ts\n            \n            function\n            getInformationLib\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/log.ts\n            \n            variable\n            log\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/stream-utils.ts\n            \n            function\n            setupMultiplex\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/window.ts\n            \n            variable\n            initialWindow\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            extensionizer : ^1.0.1\n        \n            obj-multiplex : ^1.0.0\n        \n            pump : ^3.0.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Command   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/interface/index.ts\n    \n        \n            \n                \n                    \n                        \n                        Command\n                    \n                \n                    \n                        \n                            List Command\n\n                        \n                    \n                        \n                            \n                                 INITIAL\n                            \n                        \n                        \n                            \n                                Value : initial\n                            \n                        \n                        \n                            \n                                 GET_DEVICE_ID\n                            \n                        \n                        \n                            \n                                Value : get-device-id\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getInformationLib   (src/.../info.ts)\n                        \n                        \n                            setupMultiplex   (src/.../stream-utils.ts)\n                        \n                        \n                            sleep   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/info.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getInformationLib\n                        \n                    \n                \n            \n            \n                \ngetInformationLib()\n                \n            \n\n\n\n\n            \n                \n                    Receive library type information\n\n\n                    \n                    \n                    \n                        Returns :         LibInformation\n\n                    \n                    \n                        lib type\n\n                    \n                \n            \n        \n    \n    src/utils/stream-utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupMultiplex\n                        \n                    \n                \n            \n            \n                \nsetupMultiplex(connectionStream)\n                \n            \n\n\n\n\n            \n                \n                    Sets up stream multiplexing for the given stream\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    connectionStream\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe stream to mux\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/utils/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        sleep\n                        \n                    \n                \n            \n            \n                \nsleep(ms)\n                \n            \n\n\n\n\n            \n                \n                    Sleep\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ms\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : Millisecond;\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Promise\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nLibrary\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            initialWindow   (src/.../window.ts)\n                        \n                        \n                            log   (src/.../log.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/window.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialWindow\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): Window | null => {\n    const params = `width=800,height=400,left=-120,top=-600`;\n    return window.open('http://localhost:3000', 'prokey-link', params);\n}\n                    \n                \n\n            \n                \n                    Initial Window\n\n                \n            \n\n        \n    \n\n    src/utils/log.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (lable: string, color = 'green') => {\n    console.log(`%c ${lable}`, `color:${color};`);\n}\n                    \n                \n\n            \n                \n                    Log Console\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
