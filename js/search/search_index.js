var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/BitcoinTx.html",[0,0.286,1,0.747]],["body/interfaces/BitcoinTx.html",[0,0.383,1,0.897,2,0.712,3,0.712,4,0.712,5,0.594,6,0.492,7,0.712,8,1.299,9,1.292,10,0.253,11,1.077,12,1.737,13,1.737,14,1.737,15,1.737,16,1.292,17,1.737,18,1.936,19,1.298,20,0.073,21,1.854,22,1.448,23,0.712,24,0.712,25,0.712,26,0.712,27,1.074,28,1.492,29,1.296,30,1.207,31,1.79,32,0.855,33,0.855,34,0.898,35,1.296,36,1.077,37,0.712,38,1.077,39,0.898,40,0.712,41,0.898,42,0.897,43,0.712,44,0.898,45,0.744,46,1.866,47,1.292,48,0.712,49,1.299,50,1.558,51,1.082,52,0.855,53,0.855,54,0.594,55,0.712,56,0.492,57,0.855,58,0.855,59,0.855,60,0.594,61,0.712,62,0.594,63,1.082,64,0.897,65,1.077,66,1.077,67,0.712,68,1.299,69,0.898,70,1.077,71,0.492,72,1.077,73,1.077,74,1.077,75,1.077,76,2.254,77,0.712,78,0.712,79,0.712,80,0.712,81,1.077,82,0.712,83,0.712,84,1.077,85,0.594,86,0.712,87,1.077,88,1.299,89,0.855,90,0.855,91,0.855,92,0.855,93,0.855,94,0.855,95,0.855,96,0.855,97,1.448,98,0.712,99,1.077,100,0.712,101,1.077,102,0.712,103,1.077,104,0.712,105,0.744,106,0.712,107,0.712,108,0.855,109,0.855,110,0.855,111,0.855,112,0.855,113,0.898,114,0.024,115,0.036,116,0.024]],["title/interfaces/CoinPathParam.html",[0,0.286,64,0.747]],["body/interfaces/CoinPathParam.html",[0,0.372,1,0.711,2,0.671,3,0.671,4,0.671,5,0.56,6,0.464,7,0.671,8,1.03,9,0.806,10,0.239,11,1.03,12,0.806,13,0.806,14,0.806,15,0.806,16,1.685,17,0.806,18,1.877,19,1.297,20,0.073,21,1.514,22,1.03,23,0.671,24,0.671,25,0.671,26,0.671,27,1.046,28,1.467,29,1.262,30,1.17,31,1.76,32,0.806,33,0.806,34,0.858,35,1.431,36,1.03,37,0.671,38,1.03,39,0.858,40,0.671,41,0.858,42,0.865,43,0.671,44,0.858,45,0.711,46,1.817,47,1.236,48,0.671,49,1.252,50,1.503,51,1.17,52,0.806,53,0.806,54,0.56,55,0.671,56,0.464,57,0.806,58,0.806,59,0.806,60,0.56,61,0.671,62,0.56,63,1.262,64,1.104,65,1.252,66,1.598,67,1.03,68,1.716,69,1.17,70,1.598,71,0.711,72,1.598,73,1.404,74,1.598,75,1.598,76,2.377,77,1.03,78,1.03,79,1.03,80,1.03,81,1.404,82,1.03,83,1.03,84,1.598,85,0.858,86,0.671,87,1.03,88,1.252,89,0.806,90,0.806,91,0.806,92,0.806,93,0.806,94,0.806,95,0.806,96,0.806,97,1.404,98,0.671,99,1.03,100,0.671,101,1.03,102,0.671,103,1.03,104,0.671,105,0.711,106,0.671,107,0.671,108,0.806,109,0.806,110,0.806,111,0.806,112,0.806,113,0.858,114,0.023,115,0.035,116,0.023]],["title/interfaces/LibInformation.html",[0,0.286,56,0.747]],["body/interfaces/LibInformation.html",[0,0.387,1,0.754,2,0.725,3,0.725,4,0.725,5,0.604,6,0.501,7,0.725,8,1.092,9,0.87,10,0.258,11,1.092,12,0.87,13,0.87,14,0.87,15,0.87,16,1.31,17,0.87,18,1.943,19,1.318,20,0.073,21,1.567,22,1.092,23,0.725,24,0.725,25,0.725,26,0.725,27,1.083,28,1.499,29,1.306,30,1.372,31,1.799,32,0.87,33,0.87,34,0.91,35,1.306,36,1.092,37,0.725,38,1.092,39,0.91,40,0.725,41,0.91,42,0.907,43,0.725,44,0.91,45,0.754,46,1.88,47,1.31,48,0.725,49,1.313,50,1.576,51,1.094,52,0.87,53,0.87,54,0.91,55,1.092,56,0.754,57,1.576,58,1.576,59,1.753,60,0.604,61,0.725,62,0.604,63,1.094,64,0.907,65,1.092,66,1.092,67,0.725,68,1.313,69,0.91,70,1.092,71,0.501,72,1.092,73,1.092,74,1.092,75,1.092,76,2.263,77,0.725,78,0.725,79,0.725,80,0.725,81,1.092,82,0.725,83,0.725,84,1.092,85,0.604,86,0.725,87,1.092,88,1.313,89,0.87,90,0.87,91,0.87,92,0.87,93,0.87,94,0.87,95,0.87,96,0.87,97,1.461,98,0.725,99,1.092,100,0.725,101,1.092,102,0.725,103,1.092,104,0.725,105,0.754,106,0.725,107,0.725,108,0.87,109,0.87,110,0.87,111,0.87,112,0.87,113,0.91,114,0.025,115,0.037,116,0.025]],["title/interfaces/Message.html",[0,0.286,45,0.747]],["body/interfaces/Message.html",[0,0.384,1,0.745,2,0.713,3,0.713,4,0.713,5,0.595,6,0.493,7,0.713,8,1.078,9,0.856,10,0.254,11,1.078,12,0.856,13,0.856,14,0.856,15,0.856,16,1.294,17,0.856,18,1.937,19,1.237,20,0.073,21,1.556,22,1.078,23,0.713,24,0.713,25,0.713,26,0.713,27,1.174,28,1.614,29,1.364,30,1.364,31,1.791,32,0.856,33,0.856,34,0.899,35,1.297,36,1.078,37,0.713,38,1.078,39,0.899,40,0.713,41,0.899,42,0.898,43,0.713,44,0.899,45,1.001,46,2.225,47,1.739,48,1.078,49,1.3,50,1.56,51,1.208,52,1.294,53,1.294,54,0.595,55,0.713,56,0.493,57,0.856,58,0.856,59,0.856,60,0.595,61,0.713,62,0.595,63,1.083,64,0.898,65,1.078,66,1.078,67,0.713,68,1.3,69,0.899,70,1.078,71,0.493,72,1.078,73,1.078,74,1.078,75,1.078,76,2.255,77,0.713,78,0.713,79,0.713,80,0.713,81,1.078,82,0.713,83,0.713,84,1.078,85,0.595,86,0.713,87,1.078,88,1.3,89,0.856,90,0.856,91,0.856,92,0.856,93,0.856,94,0.856,95,0.856,96,0.856,97,1.449,98,0.713,99,1.078,100,0.713,101,1.078,102,0.713,103,1.078,104,0.713,105,0.745,106,0.713,107,0.713,108,0.856,109,0.856,110,0.856,111,0.856,112,0.856,113,0.899,114,0.024,115,0.036,116,0.024]],["title/classes/ProkeyLink.html",[117,1.298,118,1.569]],["body/classes/ProkeyLink.html",[0,0.118,3,0.444,4,0.444,5,0.37,7,1.408,10,0.158,11,0.739,18,1.532,20,0.073,21,0.444,23,0.95,27,0.656,28,0.37,29,1.174,30,0.616,31,0.444,34,1.025,35,1.433,36,1.23,39,1.107,41,0.792,42,1.091,44,0.37,45,0.307,49,1.408,51,1.547,60,1.569,62,1.317,63,1.025,64,1.019,65,1.328,66,1.328,67,1.328,68,1.408,69,1.382,70,1.328,71,0.918,72,1.328,73,1.691,74,1.328,75,1.328,77,0.444,78,0.444,79,0.444,80,0.444,81,1.475,82,0.444,83,0.444,84,1.408,85,0.37,88,0.95,98,0.95,99,0.95,100,0.95,101,0.95,102,0.95,103,0.95,104,0.95,105,1.019,106,0.95,107,0.95,113,1.107,114,0.015,115,0.025,116,0.015,117,0.533,118,1.784,119,1.019,120,0.793,121,1.697,122,2.18,123,2.18,124,2.18,125,2.18,126,2.18,127,1.019,128,2.197,129,1.019,130,1.019,131,4.227,132,2.18,133,3.806,134,2.18,135,2.18,136,2.18,137,4.005,138,3.385,139,1.019,140,2.18,141,2.18,142,2.18,143,1.019,144,1.32,145,1.32,146,1.697,147,1.697,148,1.697,149,1.697,150,1.697,151,1.697,152,1.019,153,2.18,154,2.18,155,1.072,156,1.019,157,1.019,158,1.019,159,1.072,160,1.019,161,2.542,162,1.697,163,1.019,164,1.019,165,1.32,166,1.019,167,1.697,168,2.18,169,1.019,170,1.019,171,1.019,172,1.019,173,1.019,174,2.823,175,1.019,176,1.019,177,1.019,178,2.515,179,1.019,180,3.048,181,1.019,182,1.019,183,1.019,184,3.626,185,2.18,186,2.18,187,0.793,188,1.019,189,1.697,190,1.978,191,1.019,192,1.697,193,1.697,194,1.019,195,1.019,196,1.019,197,1.019,198,1.019,199,1.019,200,1.019,201,1.019,202,1.019,203,0.793,204,1.019,205,0.793,206,1.019,207,1.019,208,1.019,209,1.019,210,1.697,211,1.019,212,1.019,213,1.019,214,0.793,215,1.019,216,1.019,217,1.019,218,1.019,219,1.019]],["title/coverage.html",[220,2.592]],["body/coverage.html",[0,0.513,1,0.976,5,1.178,6,1.337,19,0.976,20,0.07,45,0.976,56,0.976,64,0.976,114,0.048,115,0.058,116,0.048,117,1.696,118,2.049,120,2.523,145,2.523,155,2.049,159,2.049,187,2.523,220,2.523,221,3.243,222,3.243,223,3.243,224,3.954,225,3.954,226,3.243,227,3.243,228,3.243,229,3.243,230,4.266,231,3.243,232,2.523,233,3.954,234,2.523,235,3.243,236,3.243,237,3.243]],["title/dependencies.html",[238,2.1,239,2.311]],["body/dependencies.html",[20,0.069,114,0.054,115,0.063,116,0.054,239,2.86,240,3.676,241,3.676,242,3.676,243,3.676,244,3.676,245,3.676,246,3.676]],["title/miscellaneous/enumerations.html",[247,0.518,248,2.311]],["body/miscellaneous/enumerations.html",[0,0.336,6,0.876,10,0.451,20,0.072,27,1.112,28,1.475,29,1.475,30,1.056,34,1.342,35,1.056,37,1.267,38,1.267,39,1.056,40,1.267,41,1.056,42,0.876,43,1.267,44,1.342,69,1.342,71,1.112,105,1.461,114,0.043,115,0.054,116,0.043,203,2.263,247,0.717,248,2.263,249,2.263,250,3.695,251,2.876,252,3.695,253,2.263,254,2.909,255,2.909,256,3.695,257,2.909,258,3.695,259,2.909,260,2.876,261,2.909,262,2.909,263,2.909,264,2.909,265,2.909,266,2.909,267,2.909]],["title/miscellaneous/functions.html",[247,0.518,268,2.311]],["body/miscellaneous/functions.html",[10,0.558,19,1.268,20,0.066,54,1.309,55,1.57,56,1.085,114,0.053,115,0.062,116,0.053,144,2.804,159,2.82,190,2.804,232,2.804,247,0.889,268,2.804,269,3.603,270,3.603]],["title/index.html",[10,0.325,271,2.1,272,2.1]],["body/index.html",[20,0.064,54,1.381,114,0.056,115,0.064,116,0.056]],["title/modules.html",[273,2.592]],["body/modules.html",[20,0.064,114,0.056,115,0.064,116,0.056,273,2.959]],["title/overview.html",[274,2.592]],["body/overview.html",[2,1.634,20,0.063,71,1.129,114,0.055,115,0.063,116,0.055,117,1.961,260,2.919,274,2.919]],["title/miscellaneous/typealiases.html",[247,0.518,275,2.97]],["body/miscellaneous/typealiases.html",[1,0.892,6,0.892,8,1.291,10,0.459,19,1.451,20,0.068,22,1.629,24,1.629,25,1.629,26,1.629,42,0.892,60,1.076,61,1.291,62,1.358,63,1.076,86,1.291,87,1.785,97,1.875,113,1.488,114,0.044,115,0.055,116,0.044,247,0.731,249,3.348,251,3.621,253,2.306,276,2.963,277,3.739,278,3.739,279,3.739,280,3.739,281,4.783]],["title/miscellaneous/variables.html",[247,0.518,282,2.311]],["body/miscellaneous/variables.html",[10,0.526,20,0.071,27,1.021,48,1.771,51,1.232,85,1.476,105,1.021,114,0.05,115,0.06,116,0.05,128,2.64,155,2.568,165,2.64,178,2.64,205,3.162,214,2.64,234,2.64,247,0.837,282,2.64,283,3.392,284,4.064,285,3.392,286,3.392,287,3.392,288,4.064,289,3.392,290,3.392]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":69,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"miscellaneous/enumerations.html":{}}}],["0x1075ecd44063f7ffcce06df09763aeeefd9503e6",{"_index":107,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["0x1678a085c290ebd122dc42cba69373b5953b831d",{"_index":98,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["0x4b",{"_index":104,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["0x5f973e540f2d3c2f06d3725a626b75247593cb36477187ae07ecfe0a4db3cf57",{"_index":106,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["0x77359400",{"_index":100,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["0x7b0d",{"_index":102,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["1",{"_index":71,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.0.0",{"_index":244,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":241,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":233,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":229,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":227,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":230,"title":{},"body":{"coverage.html":{}}}],["120,top",{"_index":286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":226,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":256,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["3",{"_index":258,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["3.0.0",{"_index":246,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":231,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":228,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":260,"title":{},"body":{"miscellaneous/enumerations.html":{},"overview.html":{}}}],["44",{"_index":83,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["5",{"_index":267,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["5/7",{"_index":225,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":67,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["600",{"_index":287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["71",{"_index":224,"title":{},"body":{"coverage.html":{}}}],["_devicemgr.signtransaction",{"_index":154,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["_port",{"_index":163,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["_window",{"_index":175,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["account",{"_index":68,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["addgetinitialize",{"_index":188,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["address",{"_index":35,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"miscellaneous/enumerations.html":{}}}],["address_n",{"_index":88,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["aliases",{"_index":276,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amount",{"_index":94,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["array",{"_index":21,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["async",{"_index":174,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["await",{"_index":131,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["background",{"_index":173,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["bitcoin",{"_index":8,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"miscellaneous/typealiases.html":{}}}],["bitcointx",{"_index":1,"title":{"interfaces/BitcoinTx.html":{}},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["boolean",{"_index":84,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["calls",{"_index":171,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["catch(error",{"_index":149,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["chainid",{"_index":108,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["change",{"_index":85,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"miscellaneous/variables.html":{}}}],["check",{"_index":33,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["chrom",{"_index":207,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["chrome",{"_index":57,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["chrome.runtime.onconnectexternal.addlistener((port",{"_index":209,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["chrome.runtime.port",{"_index":164,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["class",{"_index":117,"title":{"classes/ProkeyLink.html":{}},"body":{"classes/ProkeyLink.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":119,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["cmd",{"_index":216,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["coin",{"_index":60,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"miscellaneous/typealiases.html":{}}}],["coinbip44",{"_index":66,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["coinname",{"_index":12,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["coinpathparam",{"_index":64,"title":{"interfaces/CoinPathParam.html":{}},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"coverage.html":{}}}],["cointype",{"_index":62,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"miscellaneous/typealiases.html":{}}}],["command",{"_index":28,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"miscellaneous/enumerations.html":{}}}],["command.connect",{"_index":53,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["command.initialize",{"_index":170,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["connect",{"_index":29,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"miscellaneous/enumerations.html":{}}}],["connecthardware",{"_index":172,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["considered",{"_index":78,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["console.log",{"_index":169,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["console.log('massage",{"_index":218,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["console.log('ping",{"_index":150,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["console.log('pong",{"_index":147,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["console.log('port",{"_index":212,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["const",{"_index":51,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":126,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["coverage",{"_index":220,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["data",{"_index":46,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["default",{"_index":128,"title":{},"body":{"classes/ProkeyLink.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":81,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["dependencies",{"_index":239,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":7,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["destination",{"_index":95,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["destination_tag",{"_index":96,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["device",{"_index":36,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["documentation",{"_index":221,"title":{},"body":{"coverage.html":{}}}],["each",{"_index":77,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["enum",{"_index":32,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["enumerations",{"_index":248,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enuminputscripttype",{"_index":250,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enumoutputscripttype",{"_index":252,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["error:',error",{"_index":151,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["ethereum",{"_index":63,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"miscellaneous/typealiases.html":{}}}],["ethereumtx",{"_index":97,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"miscellaneous/typealiases.html":{}}}],["eventemitter",{"_index":122,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["example",{"_index":49,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["export",{"_index":31,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["extends",{"_index":121,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["extensionizer",{"_index":240,"title":{},"body":{"dependencies.html":{}}}],["external",{"_index":203,"title":{},"body":{"classes/ProkeyLink.html":{},"miscellaneous/enumerations.html":{}}}],["extionsion",{"_index":208,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["false",{"_index":73,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["fee",{"_index":89,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"coverage.html":{}}}],["firefox",{"_index":58,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["flags",{"_index":90,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["fn",{"_index":185,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["function",{"_index":187,"title":{},"body":{"classes/ProkeyLink.html":{},"coverage.html":{}}}],["functions",{"_index":268,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gaslimit",{"_index":101,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["gasprice",{"_index":99,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["get_address",{"_index":37,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"miscellaneous/enumerations.html":{}}}],["get_publick_key",{"_index":40,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"miscellaneous/enumerations.html":{}}}],["getaddress",{"_index":123,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["getinformationlib",{"_index":159,"title":{},"body":{"classes/ProkeyLink.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getpath",{"_index":194,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["getpublickkey",{"_index":124,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["getting",{"_index":271,"title":{"index.html":{}},"body":{}}],["hdpubnode",{"_index":277,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["icointransactionparam",{"_index":113,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"miscellaneous/typealiases.html":{}}}],["id",{"_index":59,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["identifier",{"_index":222,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":161,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["import",{"_index":23,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["information",{"_index":55,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"miscellaneous/functions.html":{}}}],["initial",{"_index":290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initialize",{"_index":44,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"miscellaneous/enumerations.html":{}}}],["initialwindow",{"_index":155,"title":{},"body":{"classes/ProkeyLink.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inputs",{"_index":13,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["interface",{"_index":0,"title":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{}},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"overview.html":{}}}],["ischange",{"_index":74,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["issegwit",{"_index":72,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["js",{"_index":180,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["key",{"_index":39,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"miscellaneous/enumerations.html":{}}}],["last_ledger_sequence",{"_index":92,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["lib",{"_index":144,"title":{},"body":{"classes/ProkeyLink.html":{},"miscellaneous/functions.html":{}}}],["lib.ping().then(pong",{"_index":146,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["libinformation",{"_index":56,"title":{"interfaces/LibInformation.html":{}},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["library",{"_index":54,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["link",{"_index":214,"title":{},"body":{"classes/ProkeyLink.html":{},"miscellaneous/variables.html":{}}}],["literal",{"_index":281,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["log",{"_index":156,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["matching",{"_index":115,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":45,"title":{"interfaces/Message.html":{}},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"coverage.html":{}}}],["miscellaneous",{"_index":247,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":273,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["msg",{"_index":219,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["msg:message",{"_index":52,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["multiplex",{"_index":243,"title":{},"body":{"dependencies.html":{}}}],["multisigredeemscripttype",{"_index":278,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["name",{"_index":136,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["need",{"_index":79,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["new",{"_index":145,"title":{},"body":{"classes/ProkeyLink.html":{},"coverage.html":{}}}],["nonce",{"_index":103,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["null",{"_index":165,"title":{},"body":{"classes/ProkeyLink.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":76,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["numberofaddress",{"_index":70,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["obj",{"_index":242,"title":{},"body":{"dependencies.html":{}}}],["onconnectexternal",{"_index":204,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["optional",{"_index":16,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["options",{"_index":14,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["outputs",{"_index":15,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["overview",{"_index":274,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":238,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":184,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["parameters",{"_index":135,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["params",{"_index":284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path",{"_index":137,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["path.account",{"_index":196,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["path.coinbip44",{"_index":195,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["path.ischange",{"_index":199,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["path.issegwit",{"_index":198,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["path.numberofaddress",{"_index":197,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["path.startindex",{"_index":200,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["payment",{"_index":93,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["paytoaddress",{"_index":261,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["paytomultisig",{"_index":263,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["paytoopreturn",{"_index":264,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["paytop2shwitness",{"_index":266,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["paytoscripthash",{"_index":262,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["paytowitness",{"_index":265,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ping",{"_index":34,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"miscellaneous/enumerations.html":{}}}],["pong",{"_index":148,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["port",{"_index":211,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["private",{"_index":162,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["processed",{"_index":181,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["production",{"_index":288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prokey",{"_index":27,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["prokeylink",{"_index":118,"title":{"classes/ProkeyLink.html":{}},"body":{"classes/ProkeyLink.html":{},"coverage.html":{}}}],["prokeylink.getaddress(\"ethereum",{"_index":132,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["prokeylink.getaddress(\"ethereum\",'m/44'/60'/0'/0",{"_index":134,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["prokeylink.getpublickkey(\"ethereum",{"_index":142,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["prokeylink.getpublickkey(\"ethereum\",'m/44'/60'/0'/0",{"_index":141,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["proky",{"_index":189,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["properties",{"_index":11,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["publick",{"_index":38,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"miscellaneous/enumerations.html":{}}}],["publickkey",{"_index":140,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["pump",{"_index":245,"title":{},"body":{"dependencies.html":{}}}],["r",{"_index":111,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["receive",{"_index":270,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reftransaction",{"_index":26,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"miscellaneous/typealiases.html":{}}}],["reftransactioninput",{"_index":279,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["reftxs",{"_index":17,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["res",{"_index":168,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["result",{"_index":114,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":116,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":178,"title":{},"body":{"classes/ProkeyLink.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":190,"title":{},"body":{"classes/ProkeyLink.html":{},"miscellaneous/functions.html":{}}}],["ripple",{"_index":86,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"miscellaneous/typealiases.html":{}}}],["rippletransaction",{"_index":87,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"miscellaneous/typealiases.html":{}}}],["s",{"_index":112,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["sample",{"_index":65,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["segwit",{"_index":80,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["sent",{"_index":47,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["sequence",{"_index":91,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["set",{"_index":206,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["showonprokey",{"_index":138,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["sign",{"_index":41,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"miscellaneous/enumerations.html":{}}}],["sign_transaction",{"_index":43,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"miscellaneous/enumerations.html":{}}}],["signtransaction",{"_index":125,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["sleep",{"_index":157,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["sleep(3000",{"_index":176,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["spendaddress",{"_index":254,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["spendmultisig",{"_index":255,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["spendp2shwitness",{"_index":259,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["spendwitness",{"_index":257,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../index.ts",{"_index":249,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../info.ts",{"_index":269,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../prokey.ts",{"_index":251,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../window.ts",{"_index":283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/interface/index.ts",{"_index":6,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/interface/prokey.ts",{"_index":253,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/prokeylink.ts",{"_index":120,"title":{},"body":{"classes/ProkeyLink.html":{},"coverage.html":{}}}],["src/prokeylink.ts:115",{"_index":139,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["src/prokeylink.ts:147",{"_index":152,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["src/prokeylink.ts:20",{"_index":129,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["src/prokeylink.ts:40",{"_index":143,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["src/prokeylink.ts:72",{"_index":130,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["src/prokeylink.ts:9",{"_index":127,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["src/utils/info.ts",{"_index":232,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/window.ts",{"_index":234,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":272,"title":{"index.html":{}},"body":{}}],["startindex",{"_index":75,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["statements",{"_index":223,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":18,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["super",{"_index":166,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["support",{"_index":61,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"miscellaneous/typealiases.html":{}}}],["table",{"_index":237,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":236,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":182,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["this._port",{"_index":210,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["this._port.name",{"_index":213,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["this._port.onmessage.addlistener((msg",{"_index":217,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["this._port.postmessage",{"_index":215,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["this.getpath(path",{"_index":193,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["this.initializeevent(_window",{"_index":177,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["this.on(command.initialize",{"_index":167,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["this.postmessage(command.connect",{"_index":179,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["this.postmessage(command.get_address",{"_index":191,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["this.postmessage(command.get_publick_key",{"_index":201,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["this.postmessage(command.ping",{"_index":183,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["this.postmessage(command.sign_transaction",{"_index":202,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["todo",{"_index":205,"title":{},"body":{"classes/ProkeyLink.html":{},"miscellaneous/variables.html":{}}}],["tr",{"_index":153,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["transaction",{"_index":42,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["transactionbinoutput",{"_index":280,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["transactioninput",{"_index":24,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"miscellaneous/typealiases.html":{}}}],["transactionoptions",{"_index":22,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"miscellaneous/typealiases.html":{}}}],["transactionoutput",{"_index":25,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"miscellaneous/typealiases.html":{}}}],["true",{"_index":133,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["ts",{"_index":50,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["tx",{"_index":9,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["txtype",{"_index":109,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["type",{"_index":19,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":275,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":192,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["use",{"_index":82,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{}}}],["utils",{"_index":158,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["utils/info",{"_index":160,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["v",{"_index":110,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{}}}],["value",{"_index":105,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":235,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":282,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":186,"title":{},"body":{"classes/ProkeyLink.html":{}}}],["website",{"_index":30,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"classes/ProkeyLink.html":{},"miscellaneous/enumerations.html":{}}}],["width=800,height=400,left",{"_index":285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window",{"_index":48,"title":{},"body":{"interfaces/BitcoinTx.html":{},"interfaces/CoinPathParam.html":{},"interfaces/LibInformation.html":{},"interfaces/Message.html":{},"miscellaneous/variables.html":{}}}],["window.open('http://localhost:3000",{"_index":289,"title":{},"body":{"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/BitcoinTx.html":{"url":"interfaces/BitcoinTx.html","title":"interface - BitcoinTx","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BitcoinTx\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/index.ts\n        \n\n\n            \n                Description\n            \n            \n                Bitcoin Tx\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            coinName\n                                        \n                                \n                                \n                                        \n                                            inputs\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            outputs\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            refTxs\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coinName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coinName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inputs:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         TransactionOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TransactionOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outputs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outputs:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refTxs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refTxs:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TransactionInput, TransactionOutput, RefTransaction, TransactionOptions } from './Prokey';\n\n/** Command connect the Prokey website */\nexport enum Command {\n    /** Command for check connect */\n    PING = 'ping',\n    /** Command for get address from device */\n    GET_ADDRESS = 'get-address',\n    /** Command for get publick key from device  */\n    GET_PUBLICK_KEY = 'get-publick-key',\n    /** Command for sign transaction with the Prokey  */\n    SIGN_TRANSACTION = 'sign-transaction',\n    INITIALIZE = 'initialize',\n    CONNECT = 'connect',\n}\n\n/** Message is Data to be sent to the other window\n * @example\n * ```ts\n * const msg:Message = {\n *   command: Command.CONNECT,\n *   data: {},\n * }\n * ```\n */\nexport interface Message {\n    /** it is for connect the Prokey website */\n    command: Command | string;\n    /** data to be sent to the Prokey website */\n    data?: any;\n}\n\n/** library type information */\nexport interface LibInformation {\n    type: 'chrome' | 'firefox' | 'website';\n    id?: string;\n}\n\n/** Coin type support */\nexport type CoinType = 'Ethereum' | 'Bitcoin';\n\n/**  CoinPathParam \n * @example\n * ```ts\n * const sample: CoinPathParam = {\n *      coinBip44: 60, \n *      account: 0,\n *      numberOfAddress: 1, \n *      isSegwit: false, \n *      isChange: false, \n *      startIndex: 0\n *  }\n * \n * ```\n*/\nexport interface CoinPathParam {\n    coinBip44: number;\n    /** Ethereum, each address is considered as an account */\n    account: number;\n    /** We only need an address*/\n    numberOfAddress: number;\n    /**  Segwit not defined so we should use 44' */\n    isSegwit: boolean;\n    /**  No change address defined in ethereum */\n    isChange?: boolean;\n    startIndex?: number;\n}\n/** Bitcoin Tx */\nexport interface BitcoinTx {\n    coinName: string;\n    inputs: Array;\n    outputs: Array;\n    refTxs?: Array;\n    options: TransactionOptions;\n}\n\n/** Ripple Transaction */\nexport type RippleTransaction = {\n    address_n: Array;\n    fee?: number;\n    flags?: number;\n    sequence?: number;\n    last_ledger_sequence?: number;\n    payment: {\n        amount: number;\n        destination: string;\n        destination_tag?: number;\n    };\n};\n/** EthereumTx \n * @example\n * ```ts\n * const sample: EthereumTx = {\n *     to: \"0x1678a085c290ebd122dc42cba69373b5953b831d\",\n *     gasPrice: \"0x77359400\",\n *     gasLimit: \"0x7b0d\",\n *     nonce: \"0x4b\",\n *     value:\n\"0x5f973e540f2d3c2f06d3725a626b75247593cb36477187ae07ecfe0a4db3cf57\",\n *     address_n: [\"0x1075EcD44063f7ffccE06df09763AEeefD9503e6\"],\n *  }\n * \n * ```\n*/\nexport type EthereumTx = {\n    address_n: Array;\n    to: string;\n    value: string;\n    gasPrice: string;\n    gasLimit: string;\n    nonce: string;\n    data?: string;\n    chainId?: number;\n    txType?: number;\n    v?: string;\n    r?: string;\n    s?: string;\n};\n\n/**  ICoinTransactionParam */\nexport type ICoinTransactionParam = BitcoinTx | EthereumTx | RippleTransaction;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoinPathParam.html":{"url":"interfaces/CoinPathParam.html","title":"interface - CoinPathParam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoinPathParam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/index.ts\n        \n\n\n            \n                Description\n            \n            \n                CoinPathParam\nconst sample: CoinPathParam = {\n     coinBip44: 60,\n     account: 0,\n     numberOfAddress: 1,\n     isSegwit: false,\n     isChange: false,\n     startIndex: 0\n }\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            account\n                                        \n                                \n                                \n                                        \n                                            coinBip44\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isChange\n                                        \n                                \n                                \n                                        \n                                            isSegwit\n                                        \n                                \n                                \n                                        \n                                            numberOfAddress\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startIndex\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        account:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Ethereum, each address is considered as an account\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coinBip44\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coinBip44:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isChange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isChange:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    No change address defined in ethereum\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSegwit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isSegwit:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Segwit not defined so we should use 44'\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberOfAddress:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    We only need an address\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startIndex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TransactionInput, TransactionOutput, RefTransaction, TransactionOptions } from './Prokey';\n\n/** Command connect the Prokey website */\nexport enum Command {\n    /** Command for check connect */\n    PING = 'ping',\n    /** Command for get address from device */\n    GET_ADDRESS = 'get-address',\n    /** Command for get publick key from device  */\n    GET_PUBLICK_KEY = 'get-publick-key',\n    /** Command for sign transaction with the Prokey  */\n    SIGN_TRANSACTION = 'sign-transaction',\n    INITIALIZE = 'initialize',\n    CONNECT = 'connect',\n}\n\n/** Message is Data to be sent to the other window\n * @example\n * ```ts\n * const msg:Message = {\n *   command: Command.CONNECT,\n *   data: {},\n * }\n * ```\n */\nexport interface Message {\n    /** it is for connect the Prokey website */\n    command: Command | string;\n    /** data to be sent to the Prokey website */\n    data?: any;\n}\n\n/** library type information */\nexport interface LibInformation {\n    type: 'chrome' | 'firefox' | 'website';\n    id?: string;\n}\n\n/** Coin type support */\nexport type CoinType = 'Ethereum' | 'Bitcoin';\n\n/**  CoinPathParam \n * @example\n * ```ts\n * const sample: CoinPathParam = {\n *      coinBip44: 60, \n *      account: 0,\n *      numberOfAddress: 1, \n *      isSegwit: false, \n *      isChange: false, \n *      startIndex: 0\n *  }\n * \n * ```\n*/\nexport interface CoinPathParam {\n    coinBip44: number;\n    /** Ethereum, each address is considered as an account */\n    account: number;\n    /** We only need an address*/\n    numberOfAddress: number;\n    /**  Segwit not defined so we should use 44' */\n    isSegwit: boolean;\n    /**  No change address defined in ethereum */\n    isChange?: boolean;\n    startIndex?: number;\n}\n/** Bitcoin Tx */\nexport interface BitcoinTx {\n    coinName: string;\n    inputs: Array;\n    outputs: Array;\n    refTxs?: Array;\n    options: TransactionOptions;\n}\n\n/** Ripple Transaction */\nexport type RippleTransaction = {\n    address_n: Array;\n    fee?: number;\n    flags?: number;\n    sequence?: number;\n    last_ledger_sequence?: number;\n    payment: {\n        amount: number;\n        destination: string;\n        destination_tag?: number;\n    };\n};\n/** EthereumTx \n * @example\n * ```ts\n * const sample: EthereumTx = {\n *     to: \"0x1678a085c290ebd122dc42cba69373b5953b831d\",\n *     gasPrice: \"0x77359400\",\n *     gasLimit: \"0x7b0d\",\n *     nonce: \"0x4b\",\n *     value:\n\"0x5f973e540f2d3c2f06d3725a626b75247593cb36477187ae07ecfe0a4db3cf57\",\n *     address_n: [\"0x1075EcD44063f7ffccE06df09763AEeefD9503e6\"],\n *  }\n * \n * ```\n*/\nexport type EthereumTx = {\n    address_n: Array;\n    to: string;\n    value: string;\n    gasPrice: string;\n    gasLimit: string;\n    nonce: string;\n    data?: string;\n    chainId?: number;\n    txType?: number;\n    v?: string;\n    r?: string;\n    s?: string;\n};\n\n/**  ICoinTransactionParam */\nexport type ICoinTransactionParam = BitcoinTx | EthereumTx | RippleTransaction;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LibInformation.html":{"url":"interfaces/LibInformation.html","title":"interface - LibInformation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LibInformation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/index.ts\n        \n\n\n            \n                Description\n            \n            \n                library type information\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"chrome\" | \"firefox\" | \"website\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"chrome\" | \"firefox\" | \"website\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TransactionInput, TransactionOutput, RefTransaction, TransactionOptions } from './Prokey';\n\n/** Command connect the Prokey website */\nexport enum Command {\n    /** Command for check connect */\n    PING = 'ping',\n    /** Command for get address from device */\n    GET_ADDRESS = 'get-address',\n    /** Command for get publick key from device  */\n    GET_PUBLICK_KEY = 'get-publick-key',\n    /** Command for sign transaction with the Prokey  */\n    SIGN_TRANSACTION = 'sign-transaction',\n    INITIALIZE = 'initialize',\n    CONNECT = 'connect',\n}\n\n/** Message is Data to be sent to the other window\n * @example\n * ```ts\n * const msg:Message = {\n *   command: Command.CONNECT,\n *   data: {},\n * }\n * ```\n */\nexport interface Message {\n    /** it is for connect the Prokey website */\n    command: Command | string;\n    /** data to be sent to the Prokey website */\n    data?: any;\n}\n\n/** library type information */\nexport interface LibInformation {\n    type: 'chrome' | 'firefox' | 'website';\n    id?: string;\n}\n\n/** Coin type support */\nexport type CoinType = 'Ethereum' | 'Bitcoin';\n\n/**  CoinPathParam \n * @example\n * ```ts\n * const sample: CoinPathParam = {\n *      coinBip44: 60, \n *      account: 0,\n *      numberOfAddress: 1, \n *      isSegwit: false, \n *      isChange: false, \n *      startIndex: 0\n *  }\n * \n * ```\n*/\nexport interface CoinPathParam {\n    coinBip44: number;\n    /** Ethereum, each address is considered as an account */\n    account: number;\n    /** We only need an address*/\n    numberOfAddress: number;\n    /**  Segwit not defined so we should use 44' */\n    isSegwit: boolean;\n    /**  No change address defined in ethereum */\n    isChange?: boolean;\n    startIndex?: number;\n}\n/** Bitcoin Tx */\nexport interface BitcoinTx {\n    coinName: string;\n    inputs: Array;\n    outputs: Array;\n    refTxs?: Array;\n    options: TransactionOptions;\n}\n\n/** Ripple Transaction */\nexport type RippleTransaction = {\n    address_n: Array;\n    fee?: number;\n    flags?: number;\n    sequence?: number;\n    last_ledger_sequence?: number;\n    payment: {\n        amount: number;\n        destination: string;\n        destination_tag?: number;\n    };\n};\n/** EthereumTx \n * @example\n * ```ts\n * const sample: EthereumTx = {\n *     to: \"0x1678a085c290ebd122dc42cba69373b5953b831d\",\n *     gasPrice: \"0x77359400\",\n *     gasLimit: \"0x7b0d\",\n *     nonce: \"0x4b\",\n *     value:\n\"0x5f973e540f2d3c2f06d3725a626b75247593cb36477187ae07ecfe0a4db3cf57\",\n *     address_n: [\"0x1075EcD44063f7ffccE06df09763AEeefD9503e6\"],\n *  }\n * \n * ```\n*/\nexport type EthereumTx = {\n    address_n: Array;\n    to: string;\n    value: string;\n    gasPrice: string;\n    gasLimit: string;\n    nonce: string;\n    data?: string;\n    chainId?: number;\n    txType?: number;\n    v?: string;\n    r?: string;\n    s?: string;\n};\n\n/**  ICoinTransactionParam */\nexport type ICoinTransactionParam = BitcoinTx | EthereumTx | RippleTransaction;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/index.ts\n        \n\n\n            \n                Description\n            \n            \n                Message is Data to be sent to the other window\nconst msg:Message = {\n  command: Command.CONNECT,\n  data: {},\n}\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            command\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        command\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        command:         Command | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Command | string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    it is for connect the Prokey website\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    data to be sent to the Prokey website\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { TransactionInput, TransactionOutput, RefTransaction, TransactionOptions } from './Prokey';\n\n/** Command connect the Prokey website */\nexport enum Command {\n    /** Command for check connect */\n    PING = 'ping',\n    /** Command for get address from device */\n    GET_ADDRESS = 'get-address',\n    /** Command for get publick key from device  */\n    GET_PUBLICK_KEY = 'get-publick-key',\n    /** Command for sign transaction with the Prokey  */\n    SIGN_TRANSACTION = 'sign-transaction',\n    INITIALIZE = 'initialize',\n    CONNECT = 'connect',\n}\n\n/** Message is Data to be sent to the other window\n * @example\n * ```ts\n * const msg:Message = {\n *   command: Command.CONNECT,\n *   data: {},\n * }\n * ```\n */\nexport interface Message {\n    /** it is for connect the Prokey website */\n    command: Command | string;\n    /** data to be sent to the Prokey website */\n    data?: any;\n}\n\n/** library type information */\nexport interface LibInformation {\n    type: 'chrome' | 'firefox' | 'website';\n    id?: string;\n}\n\n/** Coin type support */\nexport type CoinType = 'Ethereum' | 'Bitcoin';\n\n/**  CoinPathParam \n * @example\n * ```ts\n * const sample: CoinPathParam = {\n *      coinBip44: 60, \n *      account: 0,\n *      numberOfAddress: 1, \n *      isSegwit: false, \n *      isChange: false, \n *      startIndex: 0\n *  }\n * \n * ```\n*/\nexport interface CoinPathParam {\n    coinBip44: number;\n    /** Ethereum, each address is considered as an account */\n    account: number;\n    /** We only need an address*/\n    numberOfAddress: number;\n    /**  Segwit not defined so we should use 44' */\n    isSegwit: boolean;\n    /**  No change address defined in ethereum */\n    isChange?: boolean;\n    startIndex?: number;\n}\n/** Bitcoin Tx */\nexport interface BitcoinTx {\n    coinName: string;\n    inputs: Array;\n    outputs: Array;\n    refTxs?: Array;\n    options: TransactionOptions;\n}\n\n/** Ripple Transaction */\nexport type RippleTransaction = {\n    address_n: Array;\n    fee?: number;\n    flags?: number;\n    sequence?: number;\n    last_ledger_sequence?: number;\n    payment: {\n        amount: number;\n        destination: string;\n        destination_tag?: number;\n    };\n};\n/** EthereumTx \n * @example\n * ```ts\n * const sample: EthereumTx = {\n *     to: \"0x1678a085c290ebd122dc42cba69373b5953b831d\",\n *     gasPrice: \"0x77359400\",\n *     gasLimit: \"0x7b0d\",\n *     nonce: \"0x4b\",\n *     value:\n\"0x5f973e540f2d3c2f06d3725a626b75247593cb36477187ae07ecfe0a4db3cf57\",\n *     address_n: [\"0x1075EcD44063f7ffccE06df09763AEeefD9503e6\"],\n *  }\n * \n * ```\n*/\nexport type EthereumTx = {\n    address_n: Array;\n    to: string;\n    value: string;\n    gasPrice: string;\n    gasLimit: string;\n    nonce: string;\n    data?: string;\n    chainId?: number;\n    txType?: number;\n    v?: string;\n    r?: string;\n    s?: string;\n};\n\n/**  ICoinTransactionParam */\nexport type ICoinTransactionParam = BitcoinTx | EthereumTx | RippleTransaction;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProkeyLink.html":{"url":"classes/ProkeyLink.html","title":"class - ProkeyLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProkeyLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ProkeyLink.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        EventEmitter\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Connect\n                            \n                            \n                                GetAddress\n                            \n                            \n                                GetPublickKey\n                            \n                            \n                                Ping\n                            \n                            \n                                SignTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/ProkeyLink.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Connect\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/ProkeyLink.ts:20\n                        \n                    \n\n            \n                \n                    Connect Device Prokey\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetAddress\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/ProkeyLink.ts:72\n                        \n                    \n\n            \n                \n                    Get Address Coin\n const address = await prokeyLink.GetAddress(\"Ethereum\", {\ncoinBip44: 60, account: 0, numberOfAddress: 1, isSegwit: false, isChange: false, startIndex: 0\n}, true);\n const address = await prokeyLink.GetAddress(\"Ethereum\",'m/44'/60'/0'/0', true);\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    coin\n                                                    \n                                                            CoinType;\n\n                                                    \n                                            \n                                            \n                                                    path\n                                                    \n                                                            String | CoinPathParam;\n\n                                                    \n                                            \n                                            \n                                                    showOnProkey\n                                                    \n                                                            Boolean;\n\n                                                    \n                                            \n                                    \n                                \n                                Example :\n                                    \n                                         const address = await prokeyLink.GetAddress(\"Ethereum\", {\n coinBip44: 60, account: 0, numberOfAddress: 1, isSegwit: false, isChange: false, startIndex: 0\n}, true);\n\n const address = await prokeyLink.GetAddress(\"Ethereum\",'m/44'/60'/0'/0', true);\n\n\n                                    \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetPublickKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/ProkeyLink.ts:115\n                        \n                    \n\n            \n                \n                    Get PublickKey Coin\n const key = await prokeyLink.GetPublickKey(\"Ethereum\",'m/44'/60'/0'/0', true);\n const key = await prokeyLink.GetPublickKey(\"Ethereum\", {\ncoinBip44: 60, account: 0, numberOfAddress: 1, isSegwit: false, isChange: false, startIndex: 0\n}, true);\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    coin\n                                                    \n                                                            CoinType;\n\n                                                    \n                                            \n                                            \n                                                    path\n                                                    \n                                                            String | CoinPathParam;\n\n                                                    \n                                            \n                                            \n                                                    showOnProkey\n                                                    \n                                                            Boolean;\n\n                                                    \n                                            \n                                    \n                                \n                                Example :\n                                    \n                                         const key = await prokeyLink.GetPublickKey(\"Ethereum\",'m/44'/60'/0'/0', true);\n\n const key = await prokeyLink.GetPublickKey(\"Ethereum\", {\n coinBip44: 60, account: 0, numberOfAddress: 1, isSegwit: false, isChange: false, startIndex: 0\n}, true);\n\n\n                                    \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Ping\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/ProkeyLink.ts:40\n                        \n                    \n\n            \n                \n                    Ping Website\nconst lib = new ProkeyLink();\nlib.ping().then(pong=>{\n console.log('pong :',pong)\n}).catch(error=>{\n console.log('ping error:',error)\n})\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SignTransaction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/ProkeyLink.ts:147\n                        \n                    \n\n            \n                \n                    Sign Transaction\n  const sample = {\nto: \"0x1678a085c290ebd122dc42cba69373b5953b831d\",\ngasPrice: \"0x77359400\",\ngasLimit: \"0x7b0d\",\nnonce: \"0x4b\",\nvalue:\n\"0x5f973e540f2d3c2f06d3725a626b75247593cb36477187ae07ecfe0a4db3cf57\",\naddress_n: [\"0x1075EcD44063f7ffccE06df09763AEeefD9503e6\"],\n};\nconst tr = await _deviceMgr.signTransaction({\ncoin: \"Ethereum\",\ntransaction: sample,\n});\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    coin\n                                                    \n                                                            CoinType;\n\n                                                    \n                                            \n                                            \n                                                    transaction\n                                                    \n                                                            ICoinTransactionParam\n\n                                                    \n                                            \n                                    \n                                \n                                Example :\n                                    \n                                          const sample = {\nto: \"0x1678a085c290ebd122dc42cba69373b5953b831d\",\ngasPrice: \"0x77359400\",\ngasLimit: \"0x7b0d\",\nnonce: \"0x4b\",\nvalue:\n \"0x5f973e540f2d3c2f06d3725a626b75247593cb36477187ae07ecfe0a4db3cf57\",\naddress_n: [\"0x1075EcD44063f7ffccE06df09763AEeefD9503e6\"],\n};\nconst tr = await _deviceMgr.signTransaction({\ncoin: \"Ethereum\",\ntransaction: sample,\n});\n\n\n                                    \n                        \n                    \n                \n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CoinPathParam, CoinType, Command, ICoinTransactionParam, Message } from './interface';\nimport { EventEmitter, initialWindow, log, sleep } from './utils';\nimport { getInformationLib } from './utils/info';\n\nexport class ProkeyLink extends EventEmitter {\n    /**\n     * @ignore\n     */\n    private _port: chrome.runtime.Port | null = null;\n    constructor() {\n        super();\n        this.on(Command.INITIALIZE, (res) => {\n            console.log(` ProkeyLink ${Command.INITIALIZE} =`, res);\n        });\n    }\n    /**\n     * Connect Device Prokey\n     * @description calls connectHardware in background\n     */\n    Connect = async () => {\n        const _window = initialWindow();\n        await sleep(3000);\n        this.initializeEvent(_window);\n        return await this.postMessage(Command.CONNECT, getInformationLib());\n    };\n\n    /**\n     * Ping Website\n     * @example\n     * ```js\n     * const lib = new ProkeyLink();\n     * lib.ping().then(pong=>{\n     *  console.log('pong :',pong)\n     * }).catch(error=>{\n     *  console.log('ping error:',error)\n     * })\n     * ```\n     * @return The processed target boolean\n     */\n    Ping = () => {\n        return this.postMessage(Command.PING);\n    };\n\n    /**\n     * Initialize Device\n     * @ignore\n     * @param fn it is void function\n     */\n    AddGetInitialize = (fn: (res: any) => void): void => {\n        this.on(Command.INITIALIZE, fn);\n    };\n\n    /**\n     * Get Address Coin\n     * @description Get Address coin in proky device\n     * @param coin CoinType;\n     * @param path String | CoinPathParam;\n     * @param showOnProkey Boolean;\n     * @returns Address Coin\n     * @example\n     * ```js\n     *  const address = await prokeyLink.GetAddress(\"Ethereum\", {\n        coinBip44: 60, account: 0, numberOfAddress: 1, isSegwit: false, isChange: false, startIndex: 0\n      }, true);\n     * \n     * ```\n     * ```js\n     *  const address = await prokeyLink.GetAddress(\"Ethereum\",'m/44'/60'/0'/0', true);\n     * \n     * ```\n     */\n    GetAddress = async (coin: CoinType, path: CoinPathParam | string, showOnProkey?: boolean) => {\n        return await this.postMessage(Command.GET_ADDRESS, {\n            coin,\n            showOnProkey,\n            path: typeof path === 'string' ? path : this.getPath(path),\n        });\n    };\n    /**\n     * Get Path\n     * @ignore\n     * @param path\n     * @returns Array\n     */\n    private getPath = (path: CoinPathParam) => {\n        return [\n            path.coinBip44,\n            path.account, // Ethereum, each address is considered as an account\n            path.numberOfAddress, // We only need an address\n            path.isSegwit, // Segwit not defined so we should use 44'\n            path.isChange || false, // No change address defined in ethereum\n            path.startIndex,\n        ];\n    };\n\n    /**\n     * Get PublickKey Coin\n     * @description Get PublickKey coin in proky device\n     * @param coin CoinType;\n     * @param path String | CoinPathParam;\n     * @param showOnProkey Boolean;\n     * @returns Address Coin\n     * @example\n     * ```js\n     *  const key = await prokeyLink.GetPublickKey(\"Ethereum\",'m/44'/60'/0'/0', true);\n     * \n     * ```\n     * ```js\n     *  const key = await prokeyLink.GetPublickKey(\"Ethereum\", {\n        coinBip44: 60, account: 0, numberOfAddress: 1, isSegwit: false, isChange: false, startIndex: 0\n      }, true);\n     * \n     * ```\n     */\n    GetPublickKey = async (coin: CoinType, path: CoinPathParam | string, showOnProkey?: boolean) => {\n        return await this.postMessage(Command.GET_PUBLICK_KEY, {\n            coin,\n            showOnProkey,\n            path: typeof path === 'string' ? path : this.getPath(path),\n        });\n    };\n\n    /**\n     * Sign Transaction\n     * @description Sign Transaction\n     * @param {string} coin CoinType;\n     * @param {ICoinTransactionParam} transaction ICoinTransactionParam\n     * @returns ICoinTransactionParam\n     * @example\n     * ```js\n     *   const sample = {\n      to: \"0x1678a085c290ebd122dc42cba69373b5953b831d\",\n      gasPrice: \"0x77359400\",\n      gasLimit: \"0x7b0d\",\n      nonce: \"0x4b\",\n      value:\n        \"0x5f973e540f2d3c2f06d3725a626b75247593cb36477187ae07ecfe0a4db3cf57\",\n      address_n: [\"0x1075EcD44063f7ffccE06df09763AEeefD9503e6\"],\n    };\n    const tr = await _deviceMgr.signTransaction({\n      coin: \"Ethereum\",\n      transaction: sample,\n    });\n     * \n     * ```\n     */\n    SignTransaction = async (coin: CoinType, transaction: ICoinTransactionParam) => {\n        return await this.postMessage(Command.SIGN_TRANSACTION, {\n            coin,\n            transaction,\n        });\n    };\n    /**\n     * Connect External\n     * @ignore\n     */\n    async onConnectExternal() {\n        //TODO set for chrom extionsion\n        chrome.runtime.onConnectExternal.addListener((port) => {\n            this._port = port;\n            console.log('port', this._port);\n            if (this._port.name === 'prokey-link') {\n                this._port.postMessage({ cmd: 'Connect' });\n                this._port.onMessage.addListener((msg) => {\n                    console.log('massage', msg);\n                });\n            }\n        });\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/ProkeyLink.ts\n            \n            class\n            ProkeyLink\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/interface/index.ts\n            \n            interface\n            BitcoinTx\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/interface/index.ts\n            \n            interface\n            CoinPathParam\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/interface/index.ts\n            \n            interface\n            LibInformation\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/interface/index.ts\n            \n            interface\n            Message\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/utils/info.ts\n            \n            function\n            getInformationLib\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/window.ts\n            \n            variable\n            initialWindow\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            extensionizer : ^1.0.1\n        \n            obj-multiplex : ^1.0.0\n        \n            pump : ^3.0.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Command   (src/.../index.ts)\n                        \n                        \n                            EnumInputScriptType   (src/.../Prokey.ts)\n                        \n                        \n                            EnumOutputScriptType   (src/.../Prokey.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/interface/index.ts\n    \n        \n            \n                \n                    \n                        \n                        Command\n                    \n                \n                    \n                        \n                            Command connect the Prokey website\n\n                        \n                    \n                        \n                            \n                                 PING\n                            \n                        \n                        \n                            \n                                Value : ping\n                            \n                        \n                        \n                            \n                                 GET_ADDRESS\n                            \n                        \n                        \n                            \n                                Value : get-address\n                            \n                        \n                        \n                            \n                                 GET_PUBLICK_KEY\n                            \n                        \n                        \n                            \n                                Value : get-publick-key\n                            \n                        \n                        \n                            \n                                 SIGN_TRANSACTION\n                            \n                        \n                        \n                            \n                                Value : sign-transaction\n                            \n                        \n                        \n                            \n                                 INITIALIZE\n                            \n                        \n                        \n                            \n                                Value : initialize\n                            \n                        \n                        \n                            \n                                 CONNECT\n                            \n                        \n                        \n                            \n                                Value : connect\n                            \n                        \n            \n        \n\n    src/interface/Prokey.ts\n    \n        \n            \n                \n                    \n                        \n                        EnumInputScriptType\n                    \n                \n                    \n                        \n                            Prokey Interface\n\n                        \n                    \n                        \n                            \n                                 SPENDADDRESS\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 SPENDMULTISIG\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 EXTERNAL\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 SPENDWITNESS\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 SPENDP2SHWITNESS\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        EnumOutputScriptType\n                    \n                \n                        \n                            \n                                 PAYTOADDRESS\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 PAYTOSCRIPTHASH\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 PAYTOMULTISIG\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 PAYTOOPRETURN\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 PAYTOWITNESS\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 PAYTOP2SHWITNESS\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getInformationLib   (src/.../info.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/info.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getInformationLib\n                        \n                    \n                \n            \n            \n                \ngetInformationLib()\n                \n            \n\n\n\n\n            \n                \n                    Receive library type information\n\n\n                    \n                    \n                    \n                        Returns :         LibInformation\n\n                    \n                    \n                        lib type\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nLibrary\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CoinType   (src/.../index.ts)\n                        \n                        \n                            EthereumTx   (src/.../index.ts)\n                        \n                        \n                            HDPubNode   (src/.../Prokey.ts)\n                        \n                        \n                            ICoinTransactionParam   (src/.../index.ts)\n                        \n                        \n                            MultisigRedeemScriptType   (src/.../Prokey.ts)\n                        \n                        \n                            RefTransaction   (src/.../Prokey.ts)\n                        \n                        \n                            RefTransactionInput   (src/.../Prokey.ts)\n                        \n                        \n                            RippleTransaction   (src/.../index.ts)\n                        \n                        \n                            TransactionBinOutput   (src/.../Prokey.ts)\n                        \n                        \n                            TransactionInput   (src/.../Prokey.ts)\n                        \n                        \n                            TransactionOptions   (src/.../Prokey.ts)\n                        \n                        \n                            TransactionOutput   (src/.../Prokey.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/interface/index.ts\n    \n    \n        \n            \n                \n                    \n                    CoinType\n                \n            \n            \n                \n                    Coin type support\n\n                \n            \n            \n                \n                        \"Ethereum\" | \"Bitcoin\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EthereumTx\n                \n            \n            \n                \n                    EthereumTx\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ICoinTransactionParam\n                \n            \n            \n                \n                    ICoinTransactionParam\n\n                \n            \n            \n                \n                            BitcoinTx | EthereumTx | RippleTransaction\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RippleTransaction\n                \n            \n            \n                \n                    Ripple Transaction\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/interface/Prokey.ts\n    \n    \n        \n            \n                \n                    \n                    HDPubNode\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MultisigRedeemScriptType\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RefTransaction\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RefTransactionInput\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TransactionBinOutput\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TransactionInput\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TransactionOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TransactionOutput\n                \n            \n            \n                \n                        literal type | literal type | literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            initialWindow   (src/.../window.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/window.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialWindow\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): Window | null => {\n    const params = `width=800,height=400,left=-120,top=-600`;\n    //TODO change in production\n    return window.open('http://localhost:3000', 'prokey-link', params);\n}\n                    \n                \n\n            \n                \n                    Initial Window  TODO change in production\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
